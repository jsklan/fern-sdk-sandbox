// Code generated by Fern. DO NOT EDIT.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "sdk/internal"
)

type Bar struct {
	Primitive                 string  `json:"primitive" url:"primitive"`
	OptionalPrimitive         *string `json:"optionalPrimitive,omitempty" url:"optionalPrimitive,omitempty"`
	NullablePrimitive         *string `json:"nullablePrimitive,omitempty" url:"nullablePrimitive,omitempty"`
	OptionalNullablePrimitive *string `json:"optionalNullablePrimitive,omitempty" url:"optionalNullablePrimitive,omitempty"`
	NullableOptionalPrimitive *string `json:"nullableOptionalPrimitive,omitempty" url:"nullableOptionalPrimitive,omitempty"`
	Foo                       *Foo    `json:"foo" url:"foo"`
	FooOptional               *Foo    `json:"fooOptional,omitempty" url:"fooOptional,omitempty"`
	FooNullable               *Foo    `json:"fooNullable,omitempty" url:"fooNullable,omitempty"`
	FooOptionalNullable       *Foo    `json:"fooOptionalNullable,omitempty" url:"fooOptionalNullable,omitempty"`
	FooNullableOptional       *Foo    `json:"fooNullableOptional,omitempty" url:"fooNullableOptional,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (b *Bar) GetPrimitive() string {
	if b == nil {
		return ""
	}
	return b.Primitive
}

func (b *Bar) GetOptionalPrimitive() *string {
	if b == nil {
		return nil
	}
	return b.OptionalPrimitive
}

func (b *Bar) GetNullablePrimitive() *string {
	if b == nil {
		return nil
	}
	return b.NullablePrimitive
}

func (b *Bar) GetOptionalNullablePrimitive() *string {
	if b == nil {
		return nil
	}
	return b.OptionalNullablePrimitive
}

func (b *Bar) GetNullableOptionalPrimitive() *string {
	if b == nil {
		return nil
	}
	return b.NullableOptionalPrimitive
}

func (b *Bar) GetFoo() *Foo {
	if b == nil {
		return nil
	}
	return b.Foo
}

func (b *Bar) GetFooOptional() *Foo {
	if b == nil {
		return nil
	}
	return b.FooOptional
}

func (b *Bar) GetFooNullable() *Foo {
	if b == nil {
		return nil
	}
	return b.FooNullable
}

func (b *Bar) GetFooOptionalNullable() *Foo {
	if b == nil {
		return nil
	}
	return b.FooOptionalNullable
}

func (b *Bar) GetFooNullableOptional() *Foo {
	if b == nil {
		return nil
	}
	return b.FooNullableOptional
}

func (b *Bar) GetExtraProperties() map[string]interface{} {
	return b.extraProperties
}

func (b *Bar) UnmarshalJSON(data []byte) error {
	type unmarshaler Bar
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*b = Bar(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *b)
	if err != nil {
		return err
	}
	b.extraProperties = extraProperties
	b.rawJSON = json.RawMessage(data)
	return nil
}

func (b *Bar) String() string {
	if len(b.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(b.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(b); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", b)
}

type Foo struct {
	FooName  string `json:"fooName" url:"fooName"`
	FooValue string `json:"fooValue" url:"fooValue"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (f *Foo) GetFooName() string {
	if f == nil {
		return ""
	}
	return f.FooName
}

func (f *Foo) GetFooValue() string {
	if f == nil {
		return ""
	}
	return f.FooValue
}

func (f *Foo) GetExtraProperties() map[string]interface{} {
	return f.extraProperties
}

func (f *Foo) UnmarshalJSON(data []byte) error {
	type unmarshaler Foo
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*f = Foo(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *f)
	if err != nil {
		return err
	}
	f.extraProperties = extraProperties
	f.rawJSON = json.RawMessage(data)
	return nil
}

func (f *Foo) String() string {
	if len(f.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(f.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(f); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", f)
}

type NamedNullableOptionalPrimitive = *string

type NamedNullablePrimitive = *string

type NamedOptionalNullablePrimitive = *string

type NamedOptionalPrimitive = *string

type NamedPrimitive = string

type OptionalExamplesPostRequestBody struct {
	Primitive                      string                         `json:"primitive" url:"primitive"`
	OptionalPrimitive              *string                        `json:"optionalPrimitive,omitempty" url:"optionalPrimitive,omitempty"`
	NullablePrimitive              *string                        `json:"nullablePrimitive,omitempty" url:"nullablePrimitive,omitempty"`
	OptionalNullablePrimitive      *string                        `json:"optionalNullablePrimitive,omitempty" url:"optionalNullablePrimitive,omitempty"`
	NullableOptionalPrimitive      *string                        `json:"nullableOptionalPrimitive,omitempty" url:"nullableOptionalPrimitive,omitempty"`
	Foo                            *Foo                           `json:"foo" url:"foo"`
	FooOptional                    *Foo                           `json:"fooOptional,omitempty" url:"fooOptional,omitempty"`
	FooNullable                    *Foo                           `json:"fooNullable,omitempty" url:"fooNullable,omitempty"`
	FooOptionalNullable            *Foo                           `json:"fooOptionalNullable,omitempty" url:"fooOptionalNullable,omitempty"`
	FooNullableOptional            *Foo                           `json:"fooNullableOptional,omitempty" url:"fooNullableOptional,omitempty"`
	Bar                            *Bar                           `json:"bar" url:"bar"`
	BarOptional                    *Bar                           `json:"barOptional,omitempty" url:"barOptional,omitempty"`
	BarNullable                    *Bar                           `json:"barNullable,omitempty" url:"barNullable,omitempty"`
	BarOptionalNullable            *Bar                           `json:"barOptionalNullable,omitempty" url:"barOptionalNullable,omitempty"`
	BarNullableOptional            *Bar                           `json:"barNullableOptional,omitempty" url:"barNullableOptional,omitempty"`
	NamedPrimitive                 NamedPrimitive                 `json:"namedPrimitive" url:"namedPrimitive"`
	NamedOptionalPrimitive         NamedOptionalPrimitive         `json:"namedOptionalPrimitive,omitempty" url:"namedOptionalPrimitive,omitempty"`
	NamedNullablePrimitive         NamedNullablePrimitive         `json:"namedNullablePrimitive,omitempty" url:"namedNullablePrimitive,omitempty"`
	NamedOptionalNullablePrimitive NamedOptionalNullablePrimitive `json:"namedOptionalNullablePrimitive,omitempty" url:"namedOptionalNullablePrimitive,omitempty"`
	NamedNullableOptionalPrimitive NamedNullableOptionalPrimitive `json:"namedNullableOptionalPrimitive,omitempty" url:"namedNullableOptionalPrimitive,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (o *OptionalExamplesPostRequestBody) GetPrimitive() string {
	if o == nil {
		return ""
	}
	return o.Primitive
}

func (o *OptionalExamplesPostRequestBody) GetOptionalPrimitive() *string {
	if o == nil {
		return nil
	}
	return o.OptionalPrimitive
}

func (o *OptionalExamplesPostRequestBody) GetNullablePrimitive() *string {
	if o == nil {
		return nil
	}
	return o.NullablePrimitive
}

func (o *OptionalExamplesPostRequestBody) GetOptionalNullablePrimitive() *string {
	if o == nil {
		return nil
	}
	return o.OptionalNullablePrimitive
}

func (o *OptionalExamplesPostRequestBody) GetNullableOptionalPrimitive() *string {
	if o == nil {
		return nil
	}
	return o.NullableOptionalPrimitive
}

func (o *OptionalExamplesPostRequestBody) GetFoo() *Foo {
	if o == nil {
		return nil
	}
	return o.Foo
}

func (o *OptionalExamplesPostRequestBody) GetFooOptional() *Foo {
	if o == nil {
		return nil
	}
	return o.FooOptional
}

func (o *OptionalExamplesPostRequestBody) GetFooNullable() *Foo {
	if o == nil {
		return nil
	}
	return o.FooNullable
}

func (o *OptionalExamplesPostRequestBody) GetFooOptionalNullable() *Foo {
	if o == nil {
		return nil
	}
	return o.FooOptionalNullable
}

func (o *OptionalExamplesPostRequestBody) GetFooNullableOptional() *Foo {
	if o == nil {
		return nil
	}
	return o.FooNullableOptional
}

func (o *OptionalExamplesPostRequestBody) GetBar() *Bar {
	if o == nil {
		return nil
	}
	return o.Bar
}

func (o *OptionalExamplesPostRequestBody) GetBarOptional() *Bar {
	if o == nil {
		return nil
	}
	return o.BarOptional
}

func (o *OptionalExamplesPostRequestBody) GetBarNullable() *Bar {
	if o == nil {
		return nil
	}
	return o.BarNullable
}

func (o *OptionalExamplesPostRequestBody) GetBarOptionalNullable() *Bar {
	if o == nil {
		return nil
	}
	return o.BarOptionalNullable
}

func (o *OptionalExamplesPostRequestBody) GetBarNullableOptional() *Bar {
	if o == nil {
		return nil
	}
	return o.BarNullableOptional
}

func (o *OptionalExamplesPostRequestBody) GetNamedPrimitive() NamedPrimitive {
	if o == nil {
		return ""
	}
	return o.NamedPrimitive
}

func (o *OptionalExamplesPostRequestBody) GetNamedOptionalPrimitive() NamedOptionalPrimitive {
	if o == nil {
		return nil
	}
	return o.NamedOptionalPrimitive
}

func (o *OptionalExamplesPostRequestBody) GetNamedNullablePrimitive() NamedNullablePrimitive {
	if o == nil {
		return nil
	}
	return o.NamedNullablePrimitive
}

func (o *OptionalExamplesPostRequestBody) GetNamedOptionalNullablePrimitive() NamedOptionalNullablePrimitive {
	if o == nil {
		return nil
	}
	return o.NamedOptionalNullablePrimitive
}

func (o *OptionalExamplesPostRequestBody) GetNamedNullableOptionalPrimitive() NamedNullableOptionalPrimitive {
	if o == nil {
		return nil
	}
	return o.NamedNullableOptionalPrimitive
}

func (o *OptionalExamplesPostRequestBody) GetExtraProperties() map[string]interface{} {
	return o.extraProperties
}

func (o *OptionalExamplesPostRequestBody) UnmarshalJSON(data []byte) error {
	type unmarshaler OptionalExamplesPostRequestBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*o = OptionalExamplesPostRequestBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *o)
	if err != nil {
		return err
	}
	o.extraProperties = extraProperties
	o.rawJSON = json.RawMessage(data)
	return nil
}

func (o *OptionalExamplesPostRequestBody) String() string {
	if len(o.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(o.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(o); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", o)
}

type OptionalExamplesPostResponse struct {
	Success bool `json:"success" url:"success"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (o *OptionalExamplesPostResponse) GetSuccess() bool {
	if o == nil {
		return false
	}
	return o.Success
}

func (o *OptionalExamplesPostResponse) GetExtraProperties() map[string]interface{} {
	return o.extraProperties
}

func (o *OptionalExamplesPostResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler OptionalExamplesPostResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*o = OptionalExamplesPostResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *o)
	if err != nil {
		return err
	}
	o.extraProperties = extraProperties
	o.rawJSON = json.RawMessage(data)
	return nil
}

func (o *OptionalExamplesPostResponse) String() string {
	if len(o.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(o.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(o); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", o)
}

type SimpleGetResponse struct {
	Success bool `json:"success" url:"success"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (s *SimpleGetResponse) GetSuccess() bool {
	if s == nil {
		return false
	}
	return s.Success
}

func (s *SimpleGetResponse) GetExtraProperties() map[string]interface{} {
	return s.extraProperties
}

func (s *SimpleGetResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler SimpleGetResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = SimpleGetResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *s)
	if err != nil {
		return err
	}
	s.extraProperties = extraProperties
	s.rawJSON = json.RawMessage(data)
	return nil
}

func (s *SimpleGetResponse) String() string {
	if len(s.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(s.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}

type SimplePostRequestBody struct {
	Key   string `json:"key" url:"key"`
	Value string `json:"value" url:"value"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (s *SimplePostRequestBody) GetKey() string {
	if s == nil {
		return ""
	}
	return s.Key
}

func (s *SimplePostRequestBody) GetValue() string {
	if s == nil {
		return ""
	}
	return s.Value
}

func (s *SimplePostRequestBody) GetExtraProperties() map[string]interface{} {
	return s.extraProperties
}

func (s *SimplePostRequestBody) UnmarshalJSON(data []byte) error {
	type unmarshaler SimplePostRequestBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = SimplePostRequestBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *s)
	if err != nil {
		return err
	}
	s.extraProperties = extraProperties
	s.rawJSON = json.RawMessage(data)
	return nil
}

func (s *SimplePostRequestBody) String() string {
	if len(s.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(s.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}

type SimplePostResponse struct {
	Success bool `json:"success" url:"success"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (s *SimplePostResponse) GetSuccess() bool {
	if s == nil {
		return false
	}
	return s.Success
}

func (s *SimplePostResponse) GetExtraProperties() map[string]interface{} {
	return s.extraProperties
}

func (s *SimplePostResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler SimplePostResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = SimplePostResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *s)
	if err != nil {
		return err
	}
	s.extraProperties = extraProperties
	s.rawJSON = json.RawMessage(data)
	return nil
}

func (s *SimplePostResponse) String() string {
	if len(s.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(s.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}
